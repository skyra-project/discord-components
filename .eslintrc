{
	"root": true,
	"extends": [
		"neon/common",
		"neon/browser",
		"neon/module",
		"neon/no-deprecated",
		"neon/node",
		"neon/typescript",
		"neon/prettier",
		"plugin:wc/best-practice",
		"plugin:lit/recommended",
		"plugin:lit-a11y/recommended",
		"plugin:prettier/recommended"
	],
	"plugins": ["lit", "html"],
	"parserOptions": {
		"project": "./tsconfig.eslint.json"
	},
	"rules": {
		"no-extra-label": "warn",
		"no-iterator": "warn",
		"no-label-var": "warn",
		"no-labels": [
			"warn",
			{
				"allowLoop": true,
				"allowSwitch": true
			}
		],
		"no-lone-blocks": "warn",
		"no-loop-func": "warn",
		"no-mixed-operators": [
			"warn",
			{
				"groups": [
					["&", "|", "^", "~", "<<", ">>", ">>>"],
					["==", "!=", "===", "!==", ">", ">=", "<", "<="],
					["&&", "||"],
					["in", "instanceof"]
				],
				"allowSamePrecedence": false
			}
		],
		"no-multi-str": "warn",
		"rest-spread-spacing": ["warn", "never"],
		"no-restricted-properties": [
			"error",
			{
				"object": "require",
				"property": "ensure",
				"message": "Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting"
			},
			{
				"object": "System",
				"property": "import",
				"message": "Please use import() instead. More info: https://facebook.github.io/create-react-app/docs/code-splitting"
			}
		],
		"getter-return": "warn",
		"no-underscore-dangle": "off",
		"no-restricted-syntax": [
			"error",
			{
				"selector": "ForInStatement",
				"message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
			},
			{
				"selector": "LabeledStatement",
				"message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
			},
			{
				"selector": "WithStatement",
				"message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
			}
		],
		"class-methods-use-this": "off",

		// @typescript-eslint/plugin-eslint
		"@typescript-eslint/member-ordering": "off",
		"@typescript-eslint/unbound-method": "off",
		"@typescript-eslint/consistent-type-definitions": "off",
		"@typescript-eslint/prefer-function-type": "off",

		// eslint-plugin-wc
		"wc/guard-super-call": "off",

		// eslint-plugin-lit
		"lit/no-template-bind": "error",
		"lit/no-duplicate-template-bindings": "error",
		"lit/no-useless-template-literals": "error",
		"lit/attribute-value-entities": "error",
		"lit/binding-positions": "error",
		"lit/no-invalid-html": "error",
		"lit/no-value-attribute": "error",
		"lit/no-invalid-escape-sequences": "error",
		"lit/no-legacy-template-syntax": "error",
		"lit/no-private-properties": "error",
		"lit/no-native-attributes": "error",
		"lit/no-classfield-shadowing": "error",
		"lit/lifecycle-super": "error"
	},
	"overrides": [
		{
			"files": ["packages/documentation/src/env.d.ts"],
			"rules": {
				"@typescript-eslint/triple-slash-reference": "off"
			}
		}
	]
}
